{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","targetFetchImage","alt_description","src","urls","raw","CardList","fetchImages","map","id","SearchBox","placeholder","handlechange","type","onChange","App","e","setState","searchField","target","value","state","message","fetch","then","response","json","responseImagesJson","console","log","this","filterFetchImages","filter","fetchImage","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAGaA,G,kBAAO,SAACC,GACnB,OACE,qBAAKC,UAAU,iBAAf,SACE,qBACEA,UAAU,WACVC,IAAKF,EAAMG,iBAAiBC,gBAC5BC,IAAKL,EAAMG,iBAAiBG,KAAKC,UCL5BC,EAAW,SAACR,GACvB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,YAAYC,KAAI,SAACP,GAAD,OACrB,cAAC,EAAD,CAAgCA,iBAAkBA,GAAvCA,EAAiBQ,UCJvBC,G,MAAY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACtC,OACE,uBACMC,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCmCLG,E,kDAtCb,aAAe,IAAD,8BACZ,gBAOFH,aAAa,SAACI,GACZ,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAPpC,EAAKC,MAAQ,CACXC,QAAS,qBACTf,YAAa,GACbW,YAAY,IALF,E,gEAYO,IAAD,OAClBK,MAAM,yFACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAkB,OACrB,EAAKV,SAAS,CAAEV,YAAaoB,IAC3B,kBAAIC,QAAQC,IAAI,EAAKR,MAAMd,qB,+BAG1B,IAAD,EAC2BuB,KAAKT,MAAhCd,EADA,EACAA,YAAYW,EADZ,EACYA,YACba,EAAmBxB,EAAYyB,QAAO,SAAAC,GAAU,OACpDA,EAAWxB,GAAGyB,cAAcC,SAASjB,EAAYgB,kBAEnD,OACE,sBAAKnC,UAAU,MAAf,UACC,cAAC,EAAD,CACAY,YAAY,eACZC,aAAckB,KAAKlB,eAElB,cAAC,EAAD,CAAUL,YAAawB,W,GAhCbK,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.216611f5.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./card.style.css\";\n\nexport const Card = (props) => {\n  return (\n    <div className=\"card-container\">\n      <img\n        className=\"card-img\"\n        alt={props.targetFetchImage.alt_description}\n        src={props.targetFetchImage.urls.raw}\n      />\n     \n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./card-list.style.css\";\nimport { Card } from \"../card/card.component\";\n\nexport const CardList = (props) => {\n  return (\n    <div className=\"card-list\">\n      {props.fetchImages.map((targetFetchImage) => (\n        <Card key={targetFetchImage.id} targetFetchImage={targetFetchImage}/>\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./search-box.style.css\";\n\n\nexport const SearchBox = ({placeholder, handlechange}) => {\n  return (\n    <input\n          type='search'\n          placeholder={placeholder}\n          onChange={handlechange}\n        />\n  );\n};\n","import React, { Component } from 'react'\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\nimport {SearchBox} from './components/search-box/search-box.component';\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      message: \"React is the Best!\",\n      fetchImages: [],\n      searchField:''\n    }\n  }\n  handlechange=(e)=>{\n    this.setState({searchField:e.target.value});\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.unsplash.com/photos?client_id=tJg6Eqf4bXcHh574Yz09jXBi1a2bMxdyjyJ1j_PDyow\")\n      .then(response => response.json())\n      .then(responseImagesJson => \n         this.setState({ fetchImages: responseImagesJson }\n          ,()=>console.log(this.state.fetchImages)))\n  }\n\n  render() {\n    const {fetchImages,searchField} = this.state;\n    const filterFetchImages= fetchImages.filter(fetchImage=>\n      fetchImage.id.toLowerCase().includes(searchField.toLowerCase())\n      );\n    return (\n      <div className=\"App\">\n       <SearchBox\n       placeholder='Search image'\n       handlechange={this.handlechange}\n       />\n        <CardList fetchImages={filterFetchImages}>\n        </CardList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}